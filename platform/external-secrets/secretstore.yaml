apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: example-store
spec:

  # Used to select the correct ESO controller (think: ingress.ingressClassName)
  # The ESO controller is instantiated with a specific controller name
  # and filters ES based on this property
  # Optional
  # controller: dev

  # # You can specify retry settings for the http connection
  # # these fields allow you to set a maxRetries before failure, and
  # # an interval between the retries.
  # # Current supported providers: AWS, IBM
  # retrySettings:
  #   maxRetries: 5
  #   retryInterval: "10s"

  # provider field contains the configuration to access the provider
  # which contains the secret exactly one provider must be configured.
  provider:

    # (1): AWS Secrets Manager
    # aws configures this store to sync secrets using AWS Secret Manager provider
    aws:
      service: SecretsManager
      # Role is a Role ARN which the SecretManager provider will assume
      # role: arn:aws:iam::290913681714:user/external-secrets
      # AWS Region to be used for the provider
      region: ap-southeast-1
      # Auth defines the information necessary to authenticate against AWS by
      # getting the accessKeyID and secretAccessKey from an already created Kubernetes Secret
      auth:
        secretRef:
          accessKeyIDSecretRef:
            name: awssm-secret
            namespace: external-secrets
            key: access-key
          secretAccessKeySecretRef:
            name: awssm-secret
            namespace: external-secrets
            key: secret-access-key
        # jwt:
        #   serviceAccountRef:
        #     name: kustomize-controller
        #     namespace: flux-system